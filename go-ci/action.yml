name: Go CI
description: general CI steps for go-based services
inputs:
  go-version:
    description: "Version of Go to use (default: `1.18`)"
    required: false
    default: "1.18"
  pat:
    description: "Personal Access Token to use for private github go modules"
    required: true
  sonar-project-key:
    description: "SonarQube project key (ex. `parsleyhealth_my-service`)"
    required: true
  sonar-org:
    description: "Org to use for SonarQube reporting"
    required: false
    default: "parsleyhealth"
  sonar-token:
    description: "API token for sonarqube"
    required: true
  run-lint:
    description: "Should the action lint the code (default: `true`)"
    required: false
    default: "true"
  run-gosec:
    description: "Should the action run the gosec action (default: `false`)"
    required: false
    default: "false"
  lint-timeout:
    description: "Set timeout for lint the code (default: 3m0s)"
    required: false
    default: "3m0s"
  test-cmd:
    description: "Test command to execute test"
    required: false
    default: "go test ./... -coverprofile=coverage.out"

  

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - shell: bash
      run: |
        echo "GOPRIVATE=github.com/parsleyhealth" >> $GITHUB_ENV

    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go-version }}

    - name: Configure git for private modules
      shell: bash
      run: |
        git config \
        --global url."https://git:${{ inputs.pat }}@github.com".insteadOf "https://github.com"

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      if: inputs.run-lint == 'true'
      with:
        version: latest
        only-new-issues: true
        args: --issues-exit-code=0 --timeout=${{ inputs.lint-timeout }}

    - name: Test
      shell: bash
      run: ${{ inputs.test-cmd }}

    - name: Gosec
      uses: securego/gosec@master
      if: inputs.run-gosec == 'true'
      with:
        args: -no-fail -fmt=sonarqube -out security-report.json ./...

    - name: SonarCloud scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=${{ inputs.sonar-org }}
          -Dsonar.projectKey=${{ inputs.sonar-project-key }}
      env:
        GITHUB_TOKEN: ${{ inputs.pat }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
